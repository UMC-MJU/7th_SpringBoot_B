plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'umc.study'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final' // Hibernate 6.0.2 이상
    implementation 'mysql:mysql-connector-java:8.0.33' // MySQL 드라이버
    implementation 'org.hibernate.validator:hibernate-validator:7.0.5.Final' // Hibernate Validator
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2' // Jakarta Validation API
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.clean {
    delete fileTree(dir: 'src/main/generated', include: '**/*.java')
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/resources', 'src/main/generated']
        }
    }
}

def generatedDir = file("src/main/generated")

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = generatedDir
}

querydsl {
    jpa = true
    querydslSourcesDir = generatedDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.annotationProcessor
}

configurations {
    querydsl.extendsFrom annotationProcessor
}

tasks.named('test') {
    useJUnitPlatform()
}

